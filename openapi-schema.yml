openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/account/:
    get:
      operationId: listAccounts
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    post:
      operationId: createAccount
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
  /api/account/{id}/:
    get:
      operationId: retrieveAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    put:
      operationId: updateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/accountcurrentvalue/:
    get:
      operationId: listAccountCurrentValues
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccountCurrentValue'
          description: ''
      tags:
      - api
    post:
      operationId: createAccountCurrentValue
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCurrentValue'
          description: ''
      tags:
      - api
  /api/accountcurrentvalue/{id}/:
    get:
      operationId: retrieveAccountCurrentValue
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account current value.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCurrentValue'
          description: ''
      tags:
      - api
    put:
      operationId: updateAccountCurrentValue
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account current value.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCurrentValue'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAccountCurrentValue
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account current value.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountCurrentValue'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCurrentValue'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAccountCurrentValue
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this account current value.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/category/:
    get:
      operationId: listCategorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/category/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/subcategory/:
    get:
      operationId: listSubCategorys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubCategory'
          description: ''
      tags:
      - api
    post:
      operationId: createSubCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubCategory'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategory'
          description: ''
      tags:
      - api
  /api/subcategory/{id}/:
    get:
      operationId: retrieveSubCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sub category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategory'
          description: ''
      tags:
      - api
    put:
      operationId: updateSubCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sub category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubCategory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategory'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSubCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sub category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubCategory'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubCategory'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySubCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this sub category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/transaction/:
    get:
      operationId: listTransactions
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    post:
      operationId: createTransaction
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
  /api/transaction/{id}/:
    get:
      operationId: retrieveTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    put:
      operationId: updateTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTransaction
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this transaction.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api-token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api-token-auth
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        classifier:
          enum:
          - null
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        name_transaction:
          type: string
          maxLength: 200
        provider:
          type: string
          maxLength: 200
        name_friendly:
          type: string
          maxLength: 200
        is_active:
          type: boolean
      required:
      - classifier
      - name_transaction
      - provider
      - name_friendly
      - is_active
    AccountCurrentValue:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        posted:
          type: string
          format: date
        amount:
          type: integer
        account:
          type: string
      required:
      - posted
      - amount
      - account
    Category:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        from_mint:
          type: boolean
      required:
      - name
    SubCategory:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 200
        from_mint:
          type: boolean
        category:
          type: string
      required:
      - name
      - category
    Transaction:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        posted:
          type: string
          format: date
        description:
          type: string
          maxLength: 300
        description_from_source:
          type: string
          maxLength: 500
        amount:
          type: integer
        post_type:
          enum:
          - null
          - 0
          - 1
          - 2
        notes:
          type: string
          nullable: true
        account:
          type: string
        category:
          type: string
      required:
      - posted
      - description
      - description_from_source
      - amount
      - post_type
      - account
      - category
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
